dikomputer


      branch o--o
            /    \
    -o--o--o------o----
                   merge



==================== dasar-dasar branch =========
- untuk mengetahui sebuah branch yang aktif yang mana, git punya sesuatu yang disebut head
- head adalah pointer yang mengarah pada branch yang aktif
- git status (untuk melihat apakah ada yang belum dicommit)
- setelah tambah file atau hapus file jangan lupa add . dan commit -m 
==================================================

============= perintah ketika branch =============
- git branch (menampilkan ada branch apa saja)
  + warna hijau * berarti branch yang aktif  
- gitbranch nama_branch (membuat branch baru)
- git log --all --decorate --oneline --graph (melihat visualisasi branch dalam bentuk graph)
- alias graph="git log --all --decorate --oneline --graph" (membuat alias agar ga panjang +hanya berlaku di git bash+)
- git checkout nama_branch ("untuk pindah branch")
  + git checkout sering untuk pindah branch walaupun bisa pindah ke commit
  ++ $ git checkout nama_branch
     Switched to branch nama_branch

====================================================
 

====================== MERGE =====================
2 jenis merge
- fast forward (terjadi ketika branch yang ingin kita gabungkan berada dalam jalur langsung (direct path))
- three-way merge/ merge commit (ketika ngga nyambung-langsung (direct path)) 
  ++ three-way membuat commit baru (itu bedanya)

langkah ngemerge
- pindahin head ke master
- lihat dari beberapa branch mana yang jalur langsung(direct path atau anak dari master lah)
- git merge nama_branch
- git branch --merged (untuk mengetahui branch mana yang sudah di-merge)

====================================================


===================== Menghapus branch =============
- menghapus branch
- masuk ke master
- git branch -d nama_branch
- {{ kalo belum di-merge ngga bisa menggunakan perintah git branch -d nama_branch 
     kecuali huruf D nya diganti menjadi besar }}

====================================================


